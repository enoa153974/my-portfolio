---
import siteData from '../../siteData.mjs';
import Columns from '../components/Columns.astro';
import { getCollection } from 'astro:content';
import Button from '../components/Button';

//全記事を取得（ビルド時に一度だけ）
const columns = await getCollection('columns');

//記事の日付を基準に降順でソートし、最新記事が先頭に来るようにしている
const sorted = columns.sort(
    (a: ColumnsEntry, b: ColumnsEntry) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);


//簡易的な型定義
type ColumnsEntry = {
    data: { date: string; title: string; category?: string; image: string };
    slug: string;
};

//一覧表示用に必要なプロパティだけを抽出して、シンプルなオブジェクト配列に変換
//columnsItemsという変数に入れている
const columnsItems = sorted.map((item: ColumnsEntry) => ({
    date: item.data.date,
    category: item.data.category,
    title: item.data.title,
    image: item.data.image ?? '',
    slug: item.slug
}));


//このcomponent自体を他のページに埋め込むときに、外側のクラスを上書きできるようにしている
interface Props {
    wrapperClass?: string;
}
const { wrapperClass = '' } = Astro.props;
---

<!--記事一覧（日付基準で降順に並べる） -->
<section class={`${wrapperClass} columns-page l-wrapper py-8 mt-20 sm:py-4 sm:mt-4`}>
    <div class="l-container sm:px-4">
        <div class="l-inner">
            <h2 class="font-bold text-center en pt-10">columns</h2>
            <div class="columns-page__card px-6 py-6 mb-8 sm:px-0">
                <div class="flex flex-col justify-center sm:justify-start">
                    <Columns columnsItems={columnsItems} />
                </div>
                <div class="flex justify-center">
                    <Button href={siteData.works.path} className="works__btn" variant="push">
                        <span>制作物：works はこちら</span>
                    </Button>
                </div>
            </div>
        </div>
    </div>
</section>
