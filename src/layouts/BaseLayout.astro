---
// Astroのレイアウトファイル：全ページ共通の土台になる
import TopHeader from '../components/TopHeader.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import type { siteDataType } from '../types/siteData';
import AOSInit from '../components/AOSInit.jsx';
/* import '../styles/style.scss'; */

const siteData: siteDataType = {
    siteName: import.meta.env.PUBLIC_SITENAME,
    // envはあくまで補助。まずはAstroの値から決める
    siteUrl: import.meta.env.PUBLIC_ENVURL,
    pageName: Astro.props.pageName,
    title: Astro.props.title,
    description: Astro.props.description,
    ogpImage: Astro.props.ogpImage, // 例: "/assets/images/ogp_image.jpg"（先頭スラッシュ）
    type: Astro.props.type,
    path: Astro.props.path, // 例: "/works" or "/"
    ldJSON: { '@context': 'http://schema.org', '@type': 'BreadcrumbList', itemListElement: Astro.props.ldJSON }
};

// ★ ベースURLの決定（本番: Astro.site / dev・preview: Astro.url.origin）
// どちらも無ければ env、最後は相対にフォールバック
const base =
    (Astro.site && Astro.site.href) ||
    (typeof Astro.url !== 'undefined' ? Astro.url.origin : '') ||
    (siteData.siteUrl ?? '');

const absUrl = base ? new URL(siteData.path || '/', base).href : siteData.path || '/';
const absImg = base ? new URL(siteData.ogpImage, base).href : siteData.ogpImage;
const isTopPage = new URL(Astro.request.url).pathname === '/';

const { currentPath, ...otherProps } = Astro.props;
---

<!doctype html>
<html lang="ja" data-theme="light">
    <head>
        <!-- meta情報 -->
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />

        <!--ページタイトル-->
        <title>{siteData.title}</title>

        <!-- ページ個別メタデータ -->
        <meta name="description" content={siteData.description} />
        <!-- OGP -->
        <meta property="og:title" content={siteData.title} />
        <meta property="og:description" content={siteData.description} />
        <meta property="og:type" content={siteData.type} />
        <meta property="og:url" content={absUrl} />
        <meta property="og:image" content={absImg} />
        <meta property="og:site_name" content={siteData.siteName} />

        <!-- Twitter -->
        <meta name="twitter:card" content="summary_large_image" />
        <meta name="twitter:title" content={siteData.title} />
        <meta name="twitter:description" content={siteData.description} />
        <meta name="twitter:image" content={absImg} />

        <!-- 外部フォント-->
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
        <!-- 日本語フォント -->
        <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap" rel="stylesheet" />
        <link href="https://fonts.googleapis.com/css2?family=Klee+One&display=swap" rel="stylesheet" />

        <!-- 英語フォント -->
        <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet" />
        <!-- ライブラリのcss/publicから読み込み -->
        <link rel="stylesheet" href="/assets/style/slick.css" />
        <link rel="stylesheet" href="/assets/style/slick-theme.css" />
        <!-- ページ全体のcssを読み込み -->
        <link rel="stylesheet" href="/assets/styles/style.css" />
    </head>

    <body class="has-fixed-header">
        <!-- AOSの初期化 -->
        <AOSInit client:load />
        {
            isTopPage ? (
                <TopHeader currentPath={currentPath} class="header header--top" />
            ) : (
                <Header currentPath={currentPath} class="header" />
            )
        }
        <main>
            <div class="main-wrapper">
                <slot />
            </div>
        </main>

        <Footer currentPath={currentPath} />

        <!-- jQuery & Slick（CDNまたはpublicからの外部ファイル） -->
        <script is:inline src="/assets/scripts/libs/jquery-3.7.1.min.js"></script>
        <script is:inline src="/assets/scripts/libs/slick.min.js"></script>

        <!-- 各jsを初期化するmain.jsの読み込み -->
        <script type="module" src="/assets/scripts/ui/main.js"></script>
    </body>
</html>
